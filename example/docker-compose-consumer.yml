services:
  datacellar_consumer:
    image: openjdk:17-bullseye
    container_name: datacellar_consumer
    command:
      [
        "java",
        "-Dedc.hostname=datacellar_consumer",
        "-Dedc.keystore=/opt/src/certs-consumer/cert.pfx",
        "-Dedc.keystore.password=datacellar",
        "-Dedc.vault=/opt/src/certs-consumer/vault.properties",
        "-Dedc.fs.config=/opt/src/consumer.properties",
        "-Dedc.dsp.callback.address=http://datacellar_consumer:29194/protocol",
        "-jar",
        "/opt/src/datacellar-core-connector.jar"
      ]
    ports:
      - "29291:29291"
      - "29194:29194"
    volumes:
      - .:/opt/src
    networks:
      - consumer_net
  datacellar_consumer_backend:
    image: edcpy
    container_name: datacellar_consumer_backend
    command: [ "run-http-backend" ]
    volumes:
      - .:/opt/src
    environment:
      CERT_PATH: /opt/src/certs-consumer/cert.pem
      PORT: 8000
    ports:
      - "8000:8000"
    networks:
      - consumer_net
  datacellar_consumer_sandbox:
    image: edcpy
    container_name: datacellar_consumer_sandbox
    command: [ "sleep", "infinity" ]
    volumes:
      - .:/opt/src
    environment:
      CERT_PATH: /opt/src/certs-consumer/cert.pem
    env_file: ./.env.example
    networks:
      - consumer_net
  # datacellar_provider:
  #   image: openjdk:17-bullseye
  #   container_name: datacellar_provider
  #   command:
  #     [
  #       "java",
  #       "-Dedc.hostname=datacellar_provider",
  #       "-Dedc.keystore=/opt/src/certs-consumer/cert.pfx",
  #       "-Dedc.keystore.password=datacellar",
  #       "-Dedc.vault=/opt/src/certs-consumer/vault.properties",
  #       "-Dedc.fs.config=/opt/src/provider.properties",
  #       "-Dedc.dsp.callback.address=http://datacellar_provider:9194/protocol",
  #       "-jar",
  #       "/opt/src/datacellar-core-connector.jar"
  #     ]
  #   ports:
  #     - "19291:19291"
  #   volumes:
  #     - .:/opt/src
  #   networks:
  #     - consumer_net
networks:
  consumer_net:
    name: consumer_net
