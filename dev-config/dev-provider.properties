edc.participant.id=example-provider
edc.ids.id=example-provider
edc.hostname=host.docker.internal
web.http.port=19191
web.http.path=/api
web.http.management.port=19193
web.http.management.path=/management
web.http.protocol.port=19194
web.http.protocol.path=/protocol
web.http.public.port=19291
web.http.public.path=/public
web.http.control.port=19192
web.http.control.path=/control
edc.dsp.callback.address=http://host.docker.internal:19194/protocol
edc.receiver.http.endpoint=http://host.docker.internal:18000/pull
edc.dataplane.token.validation.endpoint=http://host.docker.internal:19192/control/token
eu.datacellar.openapi.url=http://host.docker.internal:9090/openapi.json
edc.public.key.alias=publickey
edc.transfer.dataplane.token.signer.privatekey.alias=datacellar
edc.transfer.proxy.token.signer.privatekey.alias=datacellar
edc.transfer.proxy.token.verifier.publickey.alias=publickey

# Configuration for the walt.id wallet that holds the credentials of the connector
eu.datacellar.wallet.url=http://host.docker.internal:7061
eu.datacellar.wallet.email=provider@ctic.es
eu.datacellar.wallet.password=provider
eu.datacellar.trust.did=did:web:gaiax.cticpoc.com:anchor
eu.datacellar.uniresolver.url=https://dev.uniresolver.io/1.0/identifiers

# Configuration for the SQL backend where the details of the contracts are stored
edc.datasource.default.url=jdbc:postgresql://host.docker.internal:15432/connector
edc.datasource.default.user=postgres
edc.datasource.default.password=postgres

# The header used to authenticate the API requests and the alias of the key in the vault
edc.api.auth.key=X-API-Key
edc.api.auth.key.alias=apikey

# Federated Catalog timing and number of crawlers
edc.catalog.cache.execution.delay.seconds=15
edc.catalog.cache.execution.period.seconds=15
edc.catalog.cache.partition.num.crawlers=5

# Federated Catalog nodes configuration (JSON file with the nodes to be crawled)
# This can be left empty even if the Federated Catalog is enabled
es.ctic.catalog.nodes.config=catalog-nodes.json

# API key authentication configuration for the backend API
es.ctic.backend.auth.key.header=X-API-Key
es.ctic.backend.auth.key.envvar=BACKEND_API_KEY
