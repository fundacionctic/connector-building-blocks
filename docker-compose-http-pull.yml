services:
  consumer:
    image: openjdk:17-bullseye
    container_name: http_pull_consumer
    command:
      [
        "java",
        "-Dedc.keystore=/certs/cert.pfx",
        "-Dedc.keystore.password=datacellar",
        "-Dedc.vault=/certs/vault.properties",
        "-Dedc.fs.config=/connector/http-pull-connector/consumer/configuration.properties",
        "-Dedc.dsp.callback.address=http://consumer:29194/protocol",
        "-Dedc.receiver.http.endpoint=http://consumer_backend:8000/pull",
        "-jar",
        "/connector/http-pull-connector/build/libs/pull-connector.jar"
      ]
    ports:
      - "29194:29194"
      - "29191:29191"
      - "29193:29193"
      - "29195:29195"
      - "29291:29291"
      - "29192:29192"
    networks:
      - http_pull_net
    volumes:
      - ./datacellar-connector:/connector
      - ./datacellar-certs:/certs
  provider:
    image: openjdk:17-bullseye
    container_name: http_pull_provider
    command:
      [
        "java",
        "-Dedc.keystore=/certs/cert.pfx",
        "-Dedc.keystore.password=datacellar",
        "-Dedc.vault=/certs/vault.properties",
        "-Dedc.fs.config=/connector/http-pull-connector/provider/configuration.properties",
        "-Dedc.dsp.callback.address=http://provider:19194/protocol",
        "-jar",
        "/connector/http-pull-connector/build/libs/pull-connector.jar"
      ]
    ports:
      - "19194:19194"
      - "19191:19191"
      - "19193:19193"
      - "19195:19195"
      - "19291:19291"
      - "19192:19192"
    networks:
      - http_pull_net
    volumes:
      - ./datacellar-connector:/connector
      - ./datacellar-certs:/certs
  consumer_backend:
    build:
      dockerfile: Dockerfile.edcpy
    container_name: http_pull_consumer_backend
    command: [ "run-http-backend" ]
    volumes:
      - ./datacellar-certs:/certs
    environment:
      EDC_CERT_PATH: /certs/cert.pem
      PORT: 8000
    ports:
      - "8000:8000"
    networks:
      - http_pull_net
networks:
  http_pull_net:
    name: ${HTTP_PULL_NETWORK:-edc_http_pull}
