{
    "asyncapi": "2.6.0",
    "id": "https://github.com/fundacionctic/eclipse-edc-poc",
    "tags": [
        {
            "name": "data-cellar"
        },
        {
            "name": "energy"
        },
        {
            "name": "data-spaces"
        }
    ],
    "info": {
        "title": "Data Cellar Mock Event-Driven API",
        "version": "1.0.0",
        "description": "This is an example of a mock event-driven API\nthat illustrates how to integrate arbitrary components \ninto the Data Cellar Data Space.\n",
        "contact": {
            "name": "Andrés García Mangas",
            "url": "https://github.com/agmangas",
            "email": "andres.garcia@fundacionctic.org"
        },
        "license": {
            "name": "EUPL-1.2"
        }
    },
    "channels": {
        "aggregation-task": {
            "publish": {
                "operationId": "aggregation-task-publish",
                "summary": "Trigger the computation of an aggregated electricity consumption dataset",
                "message": {
                    "$ref": "#/components/messages/ConsumptionAggregationTaskMessage"
                }
            },
            "bindings": {
                "amqp": {
                    "is": "queue",
                    "queue": {
                        "name": "aggregation-task-queue",
                        "autoDelete": true
                    },
                    "exchange": {
                        "name": "tasks-exchange",
                        "type": "direct",
                        "autoDelete": true
                    }
                }
            }
        }
    },
    "components": {
        "messages": {
            "ConsumptionAggregationTaskMessage": {
                "messageId": "consumption-aggregation-task",
                "payload": {
                    "type": "object",
                    "properties": {
                        "location": {
                            "type": "string",
                            "description": "The location for the consumption aggregation task."
                        },
                        "sink_url": {
                            "type": "string",
                            "format": "uri",
                            "description": "The URL where the consumption aggregation results will be sent."
                        }
                    }
                }
            }
        }
    },
    "servers": {
        "local": {
            "url": "broker:5672",
            "protocol": "amqp",
            "description": "Local RabbitMQ development service defined by the Compose stack"
        }
    },
    "defaultContentType": "application/json"
}